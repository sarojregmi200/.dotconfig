exit
exit
exit
ls
cd Documents
ls
clear
cd Projects
ls
clear
git clone https://github.com/sarojregmi200/Website.git
mkdir COSOGNepal
mv Website COSOGNepal/website
cd COSOGNepal
clear
nvim ./
clear
npx create-next-app@latest
clear
clear
nvim ./
mv app website
ls
cd website
ls
clear
mv app ./
ls
cd app
mv * ../
ls
cd ..
ls
rm -rf app
ls
mv  next.config.js next-env.d.ts node_modules package.json package-lock.json postcss.config.js public src tailwind.config.ts tsconfig.json /nextjs 
mkdir nextjs
mv  next.config.js next-env.d.ts node_modules package.json package-lock.json postcss.config.js public src tailwind.config.ts tsconfig.json /nextjs 
mv  next.config.js next-env.d.ts node_modules package.json package-lock.json postcss.config.js public src tailwind.config.ts tsconfig.json /nextjs /
mv  next.config.js next-env.d.ts node_modules package.json package-lock.json postcss.config.js public src tailwind.config.ts tsconfig.json /nextjs/
ls
mv  next.config.js next-env.d.ts node_modules package.json package-lock.json postcss.config.js public src tailwind.config.ts tsconfig.json nextjs/
ls
cd nextjs
ls
clear
ls
cd ..
ls
cd nextjs
clear
nvim 
zsh
nvim 
zsh
nvim 
zsh
nvim 
zsh
nvim 
zsh
ncim
nvim 
source 
source ~/.dotconfig/zsh/.zshrc
clear
cd ..
cd ..
cd ..
cd ..
cd ..
cd ..
nvim
source ~/.dotconfig/zsh/.zshrc
cd 
cd Documents
cd Projects
cd COSOGNepal
cd website
clear
nvim
source ~/.dotconfig/zsh/.zshrc
cd ..
cd ..
cd ..
cd Projects
cd COSOGNepal
cd website
nvim
source ~/.dotconfig/zsh/.zshrc
clear
nvim
cd ~/.dotconfig
ls
cat .gitignore
nvim .gitignore
git status
clear
ls
cd zsh
ls
ls -a
cat .zsh-history
clear
$shell
echo $SHELL
nvim 
source .zshrc
nvim 
source .zshrc
nvim
source .zshrc
cd ..
ls
clear
nvim
source .zshrc
cd zsh
ls
source .zshrc
ls
nvim
source .zshrc
ls
cd ..
cd ..
nvim
cd .dotconfig/zsh
sourch .zshrc
source .zshrc
source .zshrkjskjfkajskfjklsjdsjc
nvim
clear
exit
cd Documents/Projects
clear
cd COSOGNepal
cd website
ls
git add .
git commit -m "Update: next js project initialized"
cd nextjs
ls
touch .gitignore
nvim .gitignore
git add .
git status
clear
git status
git resotre --staged
git restore
git restore --staged
git restore --staged node_modules
git status
git add .
cd ..
git add .
ls
cd nextjs
git status
rm -rf node_modules
git add .
git status
cd ..
cd ..
rm -rf website
git clone https://github.com/sarojregmi200/Website.git
clear
ls
cd Website
ls
mv * ./
mv * ../
ls
cd ..
ls
ls -a
cd Website
ls -a
mv .git ../
ls
cd ..
ls
rm -rf Website
ls
ls -a
clear
npx create-next-app
npx create-next-app@latest
clear
cd nextjs
ls
cat package.json
rm -rf package-lock.json
yarn 
clear
yarn run dev
clear
nvim 
source ~/.dotconfig/zsh/.zshrc
exit
ls
clear
tmux
exit
cd Documents/Projects/COSOGNepal
rm -rf .git
git init
git remote add origin https://github.com/COSOGNepal/Website
git add .
git status
git commit -m "Update: clean new next app with home route"
git push
git push -u 
git push -u origin master
git pull origin main 
git pull origin main --no-rebase
git pull origin main --no-rebase --allow-unrelated-histories
git status
ls
git push
git push -u origin main
clear
exit
exit
cd Documents/Projects/COSOGNepal
nvim 
cd Documents/Projects/COSOGNepal
cd nextjs
nvim 
nvim
nvim
ls
clear
clear
cd Documents
ranger
ranger
ls
cd Projects
ls
clear
ls
cd COSOGNepal
ls
clear
cd nextjs
ls
clear
git add .
git status
ls 
ls -a
clear
git commit -m "Update: added a home route and removed some files"
git push
git push
clear
cd ~/.dotconfig
git add .
git status
nvim .gitignore
git add .
git status
git reset
git add .
git commit -m "Update: added some zsh configs related to prompt string and tab complete"
git push
nvim 
source ~/.dotconfig/zsh/.zshrc
cd ..
cd Documents/Projects/COSOGNepal/nextjs
ls
cd ~/.dotconfig/zsh
ls
git add .
nvim .zshrc
git add .
git commit -m "Update: added case insensitivity with MENU_complete to complete soon after tab enter "
git push
clear
cd ..
cd ..
cd Documents/Projects/COSOGNepal/nextjs
clear
ls
nvim 
clear
tmux detach
ls
clear
clear
cd Documents/Projects/COSOGNepal
clear
cd nextjs
yarn run dev
yarn run dev
rm -rf .next
yarn run dev
shutdown
cd Documents/Projects
mkdir indi-lang
ls
cd indi-lang
git clone https://github.com/sarojregmi200/indi-lang-model
exit
sudo pip install jupyterlab
python pip install jupyterlab
python3 pip install jupyterlab
 pip3 install jupyterlab
pip
sudo pip install jupyterlab
clear
jupyter lab
cd Documents/Projects/indi-lang
jupyter lab
exit
ls
cd Documents/Projects
ls
cd indi-lang
ls
rm -rf main.ipynb
cd indi-lang-model
ls
nvim ./
nvim
nvim ./
nvim ./
nvim ./
exit
ls
cd Documents
ls
cd Projects
ls
cd indi-lang
clear
ls
cd indi-lang-model
ls
nvim ./
nvim ./
exit
exit
echo $XDG_CONFIG_HOME
exit
clear
nvim 
nvim
alacritty
exit
exit
nvim
nvim
nvim
exit
exit
shutdown
exit
nvim
ranger
sudo dnf install dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel
sudo dnf install picom
clear
picom
clear
picom --config .dotconfig/picom/picom.conf
mkdir .dotconfig/picom
clear
cd .dotconfig/picom
cp /etc/xdg/picom.conf
cp /etc/xdg/picom.conf ./
locate picom.conf
which picom
clear
cd ..
cd picom
nvim picom.conf
ls
clear
cd ..
cd ..
cd .config
cd i3
nvim ./
picom
nvim ./
ls
source config
clear
reboot
exit
exit
exit
ranger
picom
ranger
sudo dnf remove compmgr
clear
inxi -Gxx | grep compositor
exit
exit
exit
exit
nvim ./
nvim .config/alacritty
exit
exit
exit
inxi -Gxx | grep compositor
picom
picom -u
pkill picom
picom
picom &
clear
alacritty
alacritty
exit
exit
nvim .config/alacritty
exit
exit
exit
picom
clear
exit
exit
inxi -Gxx | grep compositor
picom &
alacritty
nvim ./
nvim ./
nvim ./
exit
alacritty
nvim ./
nvim ./
cd .dotconfig
nvim ./
exit
exit
exit
exit
exit
exit
exit
alacritty
picom
cd .dotconfig
nvim ./
nvim ./
alacritty
picom &
alacritty
nvim ./
nvim ./
nvim ./
exit
nvim ./
exit
exit
alacritty
rofi -show run
rofi -show drun
nvim ./
rofi
rofi
reboot
exit
exit
exit
exit
nvim ./
ranger
alacritty
exit
exit
alacritty
exit
exit
xcomp
xprop
nvim ./
exit
cd .dotconfig
ls
clear
git status
git add .
git commit -m "Update: updated bunch of things "
git push
exit
alacrity
alacritty
 locate picom.conf
clear
locate picom.conf.example
clera
clear
ranger 
nvim ./.dotconfig
picom 
pkill picom
picom --config ./.dotconfig/picom/picom.conf --no-startup-id -b
picom --config ./.dotconfig/picom/picom.conf --no-startup-id -b
picom --config ./.dotconfig/picom/picom.conf  -b
nvim ./.dotconfig
nvim ./.dotconfig
nvim ./.dotconfig
cd .dotconfig
git add .
git commit -m "Update: added the blur background effect in alacritty"
git push
exit
exit
nvim ./
shutdown
exit
picom
alacritty
exit
exit
exit
exit
pkill picom
picom & -b
clear
cd Documents/Projects
cd COSOGNepal
pkill picom
clear
nvim ./
tmux
tmux attach
exit
cd nextjs
yarn run dev
yarn run dev
yarn run dev
cd ..
cd ..
cd COSOGNepal
cd nextjs
ls
yarn run dev
yarn 
yarn run dev
clear
cd ../..
cd pujan
cd Portfolio
ls
pnpm run dev
git add .
git commit -m "Update: navigation markup complete "
git push
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
clear
git add .
git commit -m "Update: added the navigation to the links "
git push
clear
git add .
git commit -m "Update: added the gradient "
git push
git add .
git commit -m "Update: added the quote text"
git push
git add .
git commit -m "Update: added hover "
git push
ls
cd ..
rm -rf COSOGNepal
git clone https://github.com/COSOGNepal/Website.git
mv Website COSOGNepal
cd COSOGNepal
ls
cd Website
ls
cd ..
cd ..
rm -rf COSOGNepal
ls
git clone https://github.com/COSOGNepal/Website.git
cd Website
ls
cd ..
ls COSOGNepal
cd COSOGNepal
ls
cd ..
rm -rf COSOGNepal
ls
clear
mv Website COSOGNepal
cd COSOGNepal
ls
clear
git add .
git commit -m "Update: added the action buttons"
git push
git add .
git commit -m "Update: changed the auth button to a section called connect."
git add .
git commit -m "Update: changed the auth button to a section called connect."
git push
cleawr
clear
cd ..
cd ..
cd Projects
cd pujan/Portfolio
git add .
git commit -m "Initialized a sveltekit application"
git push
git add .
git commit -m "Update: hello world
git commit -m "Update: hello world
git commit -m "Update: hello worldgit commit -m "Update: hello world"\
\
\
\
\
"
git commit -m "Update: hello worldgit commit -m "Update: hello world"\
\
\
\
\
\

git commit -m "Update: hello world"
git push
tmux detach-client
cd .dotconfig
nvim ./
ls
mkdir applications
cd applications
git clone https://github.com/yshui/picom.git
clear
sudo dnf install dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel
$ meson setup --buildtype=release build\
$ ninja -C build
 meson setup --buildtype=release build\
 ninja -C build
ls
cd build
ls
ls
cd ..
cd picom
ls
LDFLAGS="-L/path/to/libraries" CPPFLAGS="-I/path/to/headers" meson setup --buildtype=release build
sudo dnf install libev xcb-util
sudo dnf install libev xcb-util
 meson setup --buildtype=release build
sudo  meson setup --buildtype=release build
cd ..
cd picom
meson --buildtype=release . build
sudo meson --buildtype=release . build
sudo dnf install libev
sudo dnf update
sudo dnf update
git submodule update --init --recursive\
 meson --buildtype=release . build\
 ninja -C build\
 sudo ninja -C build install
sudo git submodule update --init --recursive\
 meson --buildtype=release . build\
 ninja -C build\
 sudo ninja -C build install
cd ..
rm -rf *
ls
rm -rf *
sudo rm -rf *
git clone https://github.com/jonaburg/picom
rm -rf *
ls
git clone https://github.com/yshui/picom.git
meson setup --buildtype=release build
cd picom
meson setup --buildtype=release build
sudo meson setup --buildtype=release build
sudo meson setup --buildtype=release build --experimental-backends
sudo dnf install dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel
sudo dnf update
sudo dnf upgrade
reboot
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
clear
ls
cd ..
ls
cd contributions
cd ..
cd COSOGNepal
ls
clear
cd nextjs
nvim ./
cd ..
cd ..
yarn create svelte@latest
yarn create svelte@latest pujan_portfolio
create-svelte 
clear
yarn create svelte@latest pujan
clear
ls
mv * personal/
ls
clear
yarn create svelete@latest pujan
yarn add svelte
ls
rm -rf yarn.lock package.json node_modules
ls
clear
ls
ls -al
cd Untitled\ Folder
ls
cd ..
rm -rf Untitled\ Folder
clear
git clone https://github.com/pujanpokharelofficial/Portfolio.git
mkdir puj
rm -rf puj
mkdir pujan
cd pujan
ls
clear
cd ..
mv Portfolio pujan
ls
cd pujan
ls
cd Portfolio
yarn add svelte
clear
nvim ./
rm -rf *
rm -rf index.html  node_modules package.json  yarn.lock 
clear
npm create svelte@latest ./
ls
pnpm install
sudo dnf install pnpm
yarn
ls
npm i pnpm
npm i pnpm --global
sudo npm i pnpm --global
ls
pnpm 
pnpm  i
rm -rf node_modules
pnpm i
cleawr
clear
nvim ./
echo $PKG_CONFIG_PATH
sudo dnf install pkg-util
sudo dnf install xcb-util
sudo dnf remove xcb-util
xcb-util
locate xcb-util
which xcb-util
sudo dnf install libx11-xcb1
cd applications
sudo meson setup --buildtype=release build
cd picom
sudo meson setup --buildtype=release build
locate libev
which libev
sudo dnf remove snapd
sudo dnf install libev
sudo dnf remove dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel
sudo dnf remove dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel --skip-broken
sudo dnf install dbus-devel gcc git libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel
meson setup --buildtype=release build
sudo meson setup --buildtype=release build
nvim /home/saroj/applications/picom/build/meson-logs/meson-log.txt
ldd
ldd libqxcb.so
man ldd
sudo dnf query libev
man dnf
sudo dnf search libev
sudo dnf install libev
sudo dnf install libev-devel
sudo dnf install libev.x86_64
meson --buildtype=release . build
sudo meson --buildtype=release . build
sudo dnf search xcb-util
sudo dnf search xcb-util-devel
sudo dnf install xcb-util-devel
sudo meson --buildtype=release . build
clear
sudo ninja -C build
sudo ninja -c install
sudo ninja -C install
sudo ninja -C build install
clear
nvim 
reboot
exit
exit
alacritty
exit
ls
picom
alacritty
nvim 
nvim 
exit
nvim
nvim 
picom --config ~/.dotconfig/picom/picom.conf -b\

pkill picom
picom --config ~/.dotconfig/picom/picom.conf -b\

exit
pkill picom
nvim
picom --config ~/.dotconfig/picom/picom.conf -b\

exit
nvim
reboot
exit
alacritty
exi
exit
exit
alacritty
exit
exit
alacritty
alacritty
alacritty
alacritty
exit
exit
exit
alacritty
exit
exit
alacritty -vv
exit
exit
alacritty -vv
exit
exit
nvim
cd .dotconfig
git add .
git commit -m "Update: solved the picom not working problem and random error spamming by building picom from github repo"
git push
nvim
nvim
exit
shutdown
exit
exit
exit
exit
exit
exit
alacritty --config
alacritty --config-file=~/.dotconfig/alacritty/alacritty.yml
alacritty --config-file=./.dotconfig/alacritty/alacritty.yml
alacritty --config-file=~/.dotconfig/alacritty/alacritty.yml
alacritty --config-file=/~/.dotconfig/alacritty/alacritty.yml
clear
exit
exit
alacritty
alacritty
nvim
nvim
RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRexit
exit
exit
exit
 alacritty --config-file='~/.dotconfig/alacritty/alacritty.yml' \

 alacritty --config-file='.dotconfig/alacritty/alacritty.yml' \

exit
exit
 alacritty --config-file='.dotconfig/alacritty/alacritty.yml' \

exit
exit
exit
exit
exit
exit
nvim
alacritty
reboot
exit
exit
nvim
exit
nvim
exit
nvim 
alacritty
picom
clear
nvim
nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"\

nvim /etc/X11/xorg.conf.d/
which nvida.conf
which 20-nvida.conf
locate 20-nvida.conf
locate nvida.conf
nvidia-settings
nvidia-cuda-mps-control
nvidia-cuda-mps-server
nvidia-ngx-updater
nvidia-persistenced
sudo nvidia-persistenced
Xorg
sudo Xorg
nvidia-settings help
nvidia-settings --help
sudo nvidia-settings --assign CurrentMetaMode="nvdia-auto-select +0+0 { ForceFullCompositionPipeline = On}"
nvidia-settings -q all
nvidia-settings -q gpus
nvidia-settings -q | grep CurrentMetaMode
nvidia-settings -q all | grep CurrentMetaMode
nvidia-settings -q | grep CurrentMetaModermmod nvidia_uvm
 nvidia_uvm
sudo dnf install nvidia-settings
sudo dnf search nvdia
sudo dnf search nvidia
sudo dnf install xorg-x11-drv-nvidia.x86_64
clear
nvidia-settings -q CurrentMetaMode
glxinfo -B\
echo $XDG_SESSION_TYPE
nvidia-smi
sudo lshw -c video
sudo dnf install lshw
sudo lshw -c video
cd Downloads
ls
ls
sudo chmod +x *
ls
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
pkill picom
pkill picom
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
clear
pkill nvidia
sudo pkill nvidia
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
sudo lsof /dev/nvidia*
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
sudo lsof /dev/nvidia*
pkill Xorg
sudo lsof /dev/nvidia*
inxi -G
lsmod | grep nvidia
xrandr --listproviders
xrandr --listproviders
xrandr --setprovideroffloadsink 0x23e 0x43
xrandr --setprovideroffloadsink 0x23e 0x43
sudo xrandr --setprovideroffloadsink 0x23e 0x43
nvidia-settings -q all | grep MetaMode
nvidia-settings -q all | grep metamode
nvidia-settings -q all | grep meta
nvidia-settings -q all | grep Mode
man nvidia-settings GPUPerfModes
sudo dnf remove nvidia-settings
sudo dnf install nvidia-settings
nvidia-settings
ls .nvidia-settings-rc
nvim .nvidia-settings-rc
clear
nvim ./.dotconfig/picom
 sudo dnf install nvidia-driver
nvidia-settings
nvim /etc/X11/xorg.conf.d/20-intel.conf
sudo nvim /etc/X11/xorg.conf.d/20-intel.conf
cat /etc/X11/xorg.conf.d/20-intel.conf
sudo dnf remove xserver-xorg-video-intel
reboot
exit
exit
exit
shutdown
exit
exit
exit
exit
alacritty
exit
tmux
clear
clear
tmux
tmux ls
tmux attach-session
tmux attach
clear
tmux
exit
ranger
exit
tmux
tmux attach-session
exit
cd Documents/Projects
cd COSOGNepal
cd nextjs
nvim ./
nvim ./
cd Documents/Projects/COSOGNepal/nextjs
git add .
git commit -m "Update: added the icons"
git push
clear
tmux
tmux attach-session
reboot
cd Documents/Projects/COSOGNepal/nextjs
clear
ls
yarn run dev
cd /usr/share/X11/xorg.conf.d/
ls
cat nvidia.conf
nvidia-smi
cd ~/Documents
cd ..
cd Downloads
ls
./NVIDIA-Linux-x86_64-535.104.05.run
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
sudo ./NVIDIA-Linux-x86_64-535.104.05.run
locate xorg.conf.d
locate xorg.conf.d |grep amd
cat /usr/share/X11/xorg.conf.d/10-amdgpu.conf
locate intel.conf
locate intel
clear
nvim 
exi
exit
exit
sudo dnf install sway swaybg foot polkit
clear
sway
sway --unsupported-gpu
cd .config
mkdir sway
cp /etc/sway/config sway/config
dc sway
cd sway
ls
ls config
cd con
nvim config
sway --unsupported-gpu
sway --uns
sway --unsupported-gpu
nvim 
sway --unsupported-gpu
clear
xit
exit
vim
nvim 
sudo dnf install neofetch
neofetch
clear
neofetch
neofetch
clear
neofetch
shutdown
exit
rofi -h
rofi -show drun -config ~/.dotconfig/rofi/config.rasi
rofi -show drun -config '~/.dotconfig/rofi/config.rasi'
rofi -show drun -config ~/.dotconfig/rofi/config.rasi
nvim ./
cd ..
cd ..
cd Documents
cd Projects/COSOGNepal
cd nextjs
nvim ./
nvim ./
git add .
git commit -m "added the icons with random opacity"
git push
nvim ./
exit
cd ~/Documents/Projects
cd COSOGNepal/nextjs
ls
git add .
git commit -m "Update: single component added for exporting all the icons"
git push
git pull
git pull --no-rebase
nvim ./
git add .
git commit -m "Update: fixed the design bugs and merge conflict"
git push
exit
cd ..
cd ..
cd Documents/Projects/COSOGNepal/nextjs
clear
yarn run dev
exit
nvim 
rofi
locate rofi
locate rofi.config
locate rofi.confi
locate rofi
cd .dotconfig
ls
mkdir rofi
cd rofi
nvim config.rasi
ls
nvim ./
locate config.rasi
which config.rasi
nvim ./
nvim ./
rofi -dump-config ./config.rasi
rofi -dump-config > ./config.rasi
nvim ./config.rasi
clear
tmux attach-session
tmux 
shutdonw
shutdown
shutdown
shutdown -c
sutdown
sudo dnf install papirus-icon-themsudo dnf install papirus-icon-themesudo dnf install papirus-icon-themee
sudo dnf install papirus-icon-themee
sudo dnf install papirus-icon-theme
clear
papirus
cpirus
papirus
papirus-icon-theme
sudo dnf install papirus-icon-theme
papirus-icon-theme
locate papirus
which papirus
which papirus-icon-theme
locate papirus-icon-theme
cd .dotconfig/rofi
nvim ./
nvim ./
exit
drun -dump-config
rofi -dump-config
rofi -dump-config | grep drun-
locate config.rasi
rofi -config | grep drun-
\

rofi -help
rofi -help | grep config
rofi -config .dotconfig/rofi/config.rasi
exit
nvim ./
rofi
nvim 
tmux
tmux ls
tmux attach-session
tmux new
cd Documents/Projects/COSOGNepal/nextjs
clear
git branch new animated
git branch animated
git checkout animated
git add .
git commit -m "new checkout branch to add animations"
git push
git push --set-upstram origin animated
git push --set-upstream origin animated
git checkout main
clear
git add .
git status
git commit -m "Update: branch clean up"
git push
git add .
git commit -m "Update: made some theme changes"
git push
git add .
git commit -m "Update: made some theme changes"
git push
git push
cd ..
cd ..
ls
cd pujan
ls
cd Portfolio
ls
cd ../../pujan/Portfolio
clear
shutdown
cd Documents/Projects/COSOGNepal/nextjs
yarn run dev
clear
cd ../../pujan/Portfolio
cd Documents/Projects/COSOGNepal/nextjs
nvim ./
nvim ./
git checkout animated
git branch
git checkout -
clear
nvim ./
cd ../../pujan/Portfolio
clear
nvim ./
nvim ./
cd .dotconfig/rofi
nvim 
exit
man rofi
exit
man rofi
tmux
exit
htop
htop
clear
sudo dnf install htop
htop
clear
exit
sudo dnf install akmod-nvidia xorg-x11-drv-nvidia-cuda
clear
sudo \
nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 {ForceFullCompositionPipeline=On}"
xndr --prop
xrandr --prop
tmux
cd /etc/X11/xorg.conf.d
ls
mv 20-intel.conf ../
sudo mv 20-intel.conf ../
sudo mv 20-intel.conf ../
reboot
[200~date -u +%V$(uname)|sha256sum|sed 's/\W//g'~
date -u +%V$(uname)|sha256sum|sed 's/\W//g'
exit
/etc/X11
cd /etc/X11/xorg.conf.d/
clear
ls
cd ..
ls
nvim 20-intel.conf
nvim 20-intel.conf
sudo nvim 20-intel.conf
ls
cd xorg.conf.d
nvim 20-nvidia.conf
sudo nvim 20-nvidia.conf
nvidia-xconfig
sudo dnf install nvidia-xconfig
sudo nvidia-xconfig
cd ..
ls
nvim xorg.conf
rm -rf 20-intel.conf
sudo rm -rf 20-intel.conf
reboot
reboot
ls
clear
ls
clear
nvim ./
exit
nvim ./
sudo rm -rf xorg.conf
reboot
ls
ls
clear
ls
clear
xinput
clear
sudo cd /etc/X11
clear
sudo cd /etc/X11
 cd /etc/X11
ls
nvim xorg.conf
nvidia-xconfig
sudo nvidia-xconfig
tmux
shutdown
shutdown -c
clear
clear
nvim 
cd .dotconfig
cd ranger
cd ..
cd rofi
nvim ./
exit
shutdown
cd Documents/Projects/pujan/Portfolio
nvim ./
tmux
tmux
cd ..
cd ..
cd COSOGNepal
cd nextjs
ls
nvim ./
exit
cd ..
cd ..
cd COSOGNepal
cd nextjs
nvim tailwind.config.ts
yarn run dev
git add .
git commit -m "Update: moved the colors in the extended theme"
git push
exit
cd Documents/Projects
cd pujan/Portfolio
ls
nvim ./
tmux
pnpm run dev
ls
clear
pnpm install -D tailwindcss postcss autoprefixer
pnpm add -g pnpm
pnpm setup
source ~/.zshrc
cat ~/.zshenv
cat ~/.zshrc
nvim ~/.zshrc
nvim ~/.dotconfig/zsh
source ~/.dotconfig/zsh/.zshrc
clear
rm -f ~/.zshrc
clear
ls
pnpm install -D tailwind postcss autoprefixer
node -v
pnpm -v
npm install -D tailwindcss postcss autoprefixer\
\
npx tailwindcss init -p
ls
pnpm install -D tailwindcss postcss autoprefixer\
\

clear
ls
ls -a
ls -al
clear
npx tailwindcss init -p
cat postcss.config.js
cat tailwind.config.js
clear
git add .
git commit -m "Update: tailwind css added"
git push
cd Documents/Projects/scammerLocationTracker
ls
git add .
git commit -m "ipaddr: testing"
git push
git add .
git commit -m "ipaddr: test2"
git push
cd Documents/Projects
ls
cd scammerLocationTracker
ls
nvim ./
pnpm run dev
nvim ./
git add .
git commit -m "Update: completed the frosted background"
git push
nvim ./
shutdonw
shutdown
htop
sudo dnf update
reboot
sudo reboot
sudo sensors-detect
y
y
sudo sensors-detect
sensors
lm-sensors
sudo dnf install lm-sensors
sudo dnf install im-sensors
sudo dnf install Im-sensors
sudo dnf install lm_sensors
sudo sensors-detect 
y
y
y
y
sensors
sensors

sensors | grep -i fan
watch -n1 -d 'sensors | egrep "fan|temp" | grep -v "0.0"'
shutdown
watch -n1 -d 'sensors | egrep "fan|temp" | grep -v "0.0"'
sensors
sudo sensors-detect 
sensors
sudo dnf install ideafan
ls /etc
ls /etc | grep fan
ls /etc | grep f
sensors
sensors
sensors
sensors
watch -n1 -d 'sensors | egrep "fan|temp" | grep -v "0.0"'
clear
pwmconfig
sudo pwmconfig
fancontrol
sudo fancontrol
watch -n1 -d 'sensors | egrep "fan|temp" | grep -v "0.0"'
watch -n1 -d 'sensors | egrep "fan|temp" | grep -v "0.0"'
shutdown
shutdown -h
shutdown -help
shutdown --help
shutdown --show
shutdown -P
shutdown -c
shutdown -P 0
sensors
exit
sensors
sensors
sensors
htop
exit
	exit
ls yarn.lock
rm -rf yarn.lock
ls
rm -rf node_modules
pnpm 
pnpm i
pnpm add -g pnpm
clear 
pnpm i
pnpm run dev
ls
ls public
ls ~/Downloads
mv /home/saroj/Downloads/374738723_6301320723329429_597458489095483790_n.mp4 ./public/video.mp4
clear
ls public
vlc  public/video.mp4
clear
git add .
git commit -m "Update: Added a demo video"
git push
clear
git add .
git commit -m "Update: added a video section, and restructured to manage the different sections into components"
git push
ls
git add .
git commit -m "Update: remaining updates..."
git push
clear
nvim ./
nvim ./
cd Documents/Projects/COSOGNepal/nextjs
nvim ./
tmux
shutdown -S 0
shutdown 0
tmux attach-session
tmux
TMPPREFIX
tmux attach-session
sensors
sensors
sensors
sensors
sensors
sensors
sensors
sensors
sensors
sensors
sensors
cd Documents/Projects/COSOGNepal/nextjs
pnpm run dev
cd Documents/Projects/contributions
cd ..
cd COSOGNepal
cd nextjs
nvim ./ 
cd Documents/Projects/COSOGNepal
cd nextjs
clear
ranger
mv /home/saroj/Downloads/Polygon\ 1\(1\).svg /home/saroj/Downloads/Polygon\ 1.svg  ./public
ls public
sensors
clear
htop
ls
cd Documents/Projects
ls
cd Medicine\ scheduler
ls
cleawr
clear
ls
cd frontend\ app
rm -rf *
git add .
git commit -m "Update: starting new journey"
git push
cd ..
rm -rf *
clear
git clone https://github.com/SansCaar/medicine_app.git ./
ls
ls -al
clear
npx create-expo-app frontend
ls
clear 
cd frontend
ls
rm -rf node_modules
ls
clear
pnpm i
clear
cd ..
ls
cd fon
cd frontend
git add .
git commit -m "Update: intialized the expo app"
git push
clear
tmux
nvim ./
nvim ./
shutdown 0
shutdown 0
shutdown 0
shutdown 0
sudo dnf search bun
sudo curl -fsSL https://bun.sh/install | bash
nvim ~/.dotconfig/zsh/.zshrc
clear
bun
source ~/.dotconfig/zsh/.zshrc
bun
clear
rm -rf node_modules
bun install
rm -rf node_modules
bun i
exit
cd Documents/Projects
ls
cd COSOGNepal
ls
cd nextjs
rm -rf node_modules
ls
pnpm i
tmux
cd /etc/X11/xorg.conf.d
ls
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
xinput | grep "touchpad"
xinput
xinput
xinput | grep "touchpad"
xinput | grep touchpad
xinput | grep "Touchpad"
xinput
sudo nvim ./
libinput
libinput list-devices
sudo libinput listdivices
sudo libinput list-divices
sudo libinput list-devices
sudo libinput list-devices | grep "Tochpad"
sudo libinput list-devices | grep "Touchpad"
Section "InputClass"\
    Identifier "touchpad"\
    Driver "libinput"\
    MatchIsTouchpad "on"\
    Option "Tapping" "on"\
    Option "TappingButtonMap" "lmr"\
EndSection
sudo nvim ./
startx
clear
sudo service lightdm restart
systemctl
reboot
~~
nvim ./
cd /etc/X11/xorg.conf.d
ls
clear
clear
ls
sudo nvim ./30-touchpad.conf
logout
sudo logout
sudo signout
v
cd /etc/X11/xorg.conf.d
ls
sudo nvim ./30-touchpad.conf
sudo nvim ./30-touchpad.conf
cd ~
nvim ./
shutdown 0
/etc/X11/xorg.conf.d
cd /etc/X11/xorg.conf.d
nvim ./
sudo nvim ./
cd /etc/X11/xorg.conf.d
sudo nvim ./
synaptics
sudo dnf search synaptics
sudo dnf install synaptics
sudo dnf install xorg-x11-drv-synaptics-devel.x86_64
cd /
ls
shutdown 0
rofi -no-config -dump-theme
exit
rofi -no-config -dump-theme
exit
nvim ./
cd .dotconfig
cd rofi
ls
nvim ./
tmux
clear
ls
nvim ./
exit
nvim ./
nvim ./
exit
cd Documents/Projects
ls
cd COSOGNepal
cd nextjs
nvim ./
exit
shutdown 0
nvim ./
nvim ./
nvim ./
git add .
git commit -m "Update: switched to default themed rofi with some padding"
git push
nvim ./
exit
exit
exit
zsh
exit
nvim ./
exit
exit
exit
xinput
clear
clear
clear
sway
exir
exit
nvim ./
cd .config/.dotfiles
ls
nvim ./
tmux
nvim ./
alacritty
alacritty --no-processid
alacritty --config-file=/$HOME/.config/alacritty/alacritty.yml
alacritty --config-file=$HOME/.config/alacritty/alacritty.yml
alacritty --config-file=~/.config/alacritty/alacritty.yml
alacritty --config-file=/home/saroj/.config/alacritty/alacritty.yml
alacritty --config-file="/home/saroj/.config/alacritty/alacritty.yml"
alacritty --config-file="/~/.config/alacritty/alacritty.yml"
alacritty --config-file="~/.config/alacritty/alacritty.yml"
alacritty --config-file="~/.config/alacritty/alacritty.yml
alacritty --config-file=~/.config/alacritty/alacritty.yml
cd ~/.config/alacritty/alacritty.yml
cd ~/.config/alacritty/
alacritty --config-file=~/.config/alacritty
alacritty --config-file=./alacritty.yml
alacritty --config-file=alacritty.yml
alacritty --config-file="alacritty.yml"
alacritty --config-file="alacritty.yml"
ls
man alacritty
cd ..
cd ~
ls
ls alacritty
cd alacritty
nvim ./
cd ..
cd con
cd .con
cd .config
clear
ls
rm -rf gtk-2.0 gtk-3.0 gtk-4.0 
rm -rf Mechvibes
rm -rf sway
clear
cd alacritty
ls
nvim ./
cd ..
cd .dotfiles/alacritty
ls
nvim a
nvim alacritty.yml
cd ..
cd ..
ls
cd nvim
ls
clear
nvim ./
nvim ./
nvim ./
sudo nautilus
cd Documents/Projects
git clone https://github.com/sarojregmi200/lawGpt.git
bun
clear
bunx create-next-app@lastest
bunx create-next-app@latest
clear
ls
web
cd web
ls
cd ..
mv web lawGpt/web
ls
ls w
clear
cd lawGpt
cd web
cd ..
rm -rf web
npx create-next-app@latest
npx create-next-app@latest
cd web
ls
rm -rf node_modules
rm -rf package-lock.json
ls
clear
pnpm i
pnpm add -g pnpm
pnpm i
rm -rf node_modules
bun i
clear
rm -rf node_modules
pnpm i
clear
ls
rm -rf bun.lockb
clear
nvim ./
clear
ls
ls -a
cd ..
ls -al
git add .
git commit -m "Update: project init."
git push
clear
cd web
ls
nvim ./
git add .
pnpm run dev
clear
git commit -m "Update: clean up"
git push
clear
nvim ./
ls
cd ~
cd .config
ls
cd nvim
ls
nvim ./
cd ..
cd ..
.cd .config
cd .config
ls
cd .dotfiles
ls
cd nvim
ls
nvim ./init.lua
nvim ./
cd ..
cd ..
sudo dnf remove nvim 
sudo dnf remove neovim
sudo dnf install neovim
clear
nvim 
ls 
cd nvim
ls
nvim ./init.lua
cd ..
nvim ./
cd nvim
ls
nvim ./
rm -rf *
ls
clear
cd ..
cd .dotfiles
ls
stow nvim
cd ..
ls 
rm -rf lazy-lock.json
mv init.lua nvim/init.lua
nvim 
exit
nvim 
cd .config
ls
cd nvim
ls
nvim init.lua
cd ..
cd .dotfiles
man stow
stow nvim
cd ..
ls
nvim init.lua
cd nvim
rm -rf *
clear
cd ..
cd .dotfiles
stow nvim ../nvim
stow nvim nvim
ls
cd nvim
ls
cd ..
cd ..
ls
cd nautilus
cd ..
cd nvim
ls
cd ..
mv init.lua nvim
ls -al
cd nvim
ls -al
ln -s init.lua ../.dotfiles/nvim/init.lua
rm -rf *
ln -s init.lua ../.dotfiles/nvim/init.lua
cd .. 
cd .dotfiles/nvim
ln -s init.lua ../../nvim/init.lua
ls
cd ..
cd ..
cd nvim
l
ls
nvim init.lua
sudo nvim init.lua
rm -rf init.lua
cd ..
cd .dotfiles
cd nvim
ls
sudo ln -s init.lua ../../nvim/init.lua
cd ..
cd ..
cd nautilus
cd ..
cd nvim
cat init.lua
rm -rf init.lua
ls
cd ..
cd nvim
tmux
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
exit
exit
nvim
ls
nvim init.lua
ls
nvim ./init.lua
nvim
nvim
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim
local builtin = require('telescope.builtin')\
vim.keymap.set('n', '<leader>ff', builtin.find_files, {})\

local builtin = require('telescope.builtin')\
vim.keymap.set('n', '<leader>ff', builtin.find_files, {})\

usr/bin/python3 -m pip install pynvim
pip
pip3
pip3 -m install pynvim
pip -m install pynvim
python3 -m install pynvim
python3 -m pip install pynvim
cd ..
cd ..
cd Documents/Projects/COSOGNepal/nextjs
nvim ./
nvim ./
exit
cd .config
cd nvim
clear
mkdir lua
rm -rf init.lua
touch init.lua
nvim ./
tmux
exit
ls
cd .config
ls
cd i3
nvim ./
rm -rf i3
cd ..
clear
cd .dotfiles
ls
cd nvim
ls
clear
rm -rf nvi
ls
cd ..
rm -rf nvim
ls
clear
cd ..
rm -rf i3
ls nvim
mv nvim .dotfiles/nvim
clear
clear
ln ~/.config/.dotfiles/nvim nvim/
ll
ln -s  ~/.config/.dotfiles/nvim nvim/
ll
ln -s  ~/.config/.dotfiles/nvim nvim
nvim
nvim ./
clear
ln -s ~/.config/.dotfiles/i3 i3
i3
i3 --help
i3 -C
logout
reboot
cd .config
cd .dotfiles
nvim ./
nvim ./
cd ..
ls
rm -rf rofi ranger 
cd .dotfiles
ls
cd ..
mv zsh .dotfiles/zsh
ls
rm -rf alacritty
rm -rf nitrogen
nitrogen
clear
ls
ln ~/.config/.dotfiles/alacritty alacitty
ln -s ~/.config/.dotfiles/alacritty alacitty
ln -s ~/.config/.dotfiles/zsh zsh
tmux
ls
ln -s ~/.config/.dotfiles/picom picom
clear
ll
ln -s ~/.config/.dotfiles/rofi rofi
clear
reboot
cd .dotfiles
ls
exit
exit
exi
exi
exit
exit
exit
cd con
cd .config
ls 
cd alacitty
ls
nvim alacritty.yml
tmux
exit
exit
exit
exit
exit
exit
exit
nvim .config/.dotfiles/i3
alacritty --config-file=~/.config/alacitty/alacritty.yml
alacritty --config-file=/~/.config/alacitty/alacritty.yml
alacritty --config-file="/~/.config/alacitty/alacritty.yml"
alacritty --config-file=$HOME/.config/alacitty/alacritty.yml
i3status --help
i3status -c /$HOME/.config/i3/i3status.conf
nvim ./
nvim ./
picom --config /$HOME/.config/picom/picom.conf
pkill picom
picom
cd ..
ls
ls picom
cd picom
nvim picom.conf
nitrogen
rofi
rofi -show 
rofi -show drun
clear
alacritty
alacritty --help
alacritty --help | grep "config"
alacritty --config-file=../alacritty/alacritty.yml
nitrogen
pkill nitrogen
reboot
nvim ./
cd .config/.dotfiles
nvim ./
nvim ./
tmux 
cd .dotfiles
nvim ./
nvim ./
exit
cd .dotfiles
cd nvim
nvim ./
git add .
git commit -m "Update: changed ctrl + y to accept to just enter"
git push
git push
git config -credintial.helper store
git push
nvim ./
exit
cd ..
cd Documents/Projects
cd COSOGNepal
git pull
git add .
git commit -m "Update: backups"
git pull
git pull --no-rebase
git pull
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
git pull
git add .
git commit -m "unresolved conflicts"
git push
git configure credentail.helper store
git config credentail.helper store
git push
git push
cd ..
cd lawGpt
ls
git pull
git add .
git commit -m "Imporved the button"
git push
clear
git pull
git pull --no-rebase
git commit -m "Update: added the basic layout"
git add .
git commit -m "Update: added the basic layout of chat."
git pull
git pull --no-rebase
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
clear
exit
cd ..
cd Documents/Projects/lawGpt
ls
cd web
clear
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
nvim ./
exit
exit
cd ..
cd Documents/Projects
ls
cd COSOGNepal/nextjs
git pull
cd ..
cd ..
cd lawGpt
cd web/src
ls
cd components
ls
mv Button.tsx global/
ls global
clear
cd ..
cd ..
clear
pnpm
pnpm i
pnpm run dev
exit
nitrogen --no-statup-id
nitrogen 
nitrogen  --help
nitrogen  --restore
cd .config
nvim ./
nvim ./.dotfiles
tmux
exit
shutdown 0
nitrogen --restore
